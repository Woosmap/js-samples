/// <reference types="mapbox__mapbox-gl-draw" />
declare namespace woosmap.map{class Drawing extends MapboxDraw{constructor(options?:MapboxDraw.MapboxDrawOptions);addControl(map:woosmap.map.Map,position?:woosmap.map.ControlPositionType):void;removeControl():void;addListener(event:MapboxDraw.DrawEventType,handler:(...args:any[])=>any):void;}}declare namespace woosmap.map{class Map extends woosmap.map.MVCObject{data:woosmap.map.Data;constructor(mapDiv:HTMLElement|string,options?:woosmap.map.MapOptions);fitBounds(bounds:woosmap.map.LatLngBounds|woosmap.map.LatLngBoundsLiteral,padding?:woosmap.map.Padding,animate?:boolean,):void;getBounds(padding?:woosmap.map.Padding):woosmap.map.LatLngBounds;getCenter():woosmap.map.LatLng;getDiv():HTMLElement;getHeading():number;getTilt():number;getZoom():number;panBy(x:number,y:number):void;panTo(latLng:woosmap.map.LatLng|woosmap.map.LatLngLiteral,padding?:woosmap.map.Padding):void;flyTo(options:woosmap.map.FlyToOptions):void;panToBounds(latLngBounds:woosmap.map.LatLngBounds|woosmap.map.LatLngBoundsLiteral,padding:number|woosmap.map.Padding,):void;setCenter(center:woosmap.map.LatLng|woosmap.map.LatLngLiteral,padding?:woosmap.map.Padding):void;setHeading(heading:number):void;setTilt(tilt:number):void;setZoom(zoom:number):void;}}declare namespace woosmap.map{class InfoWindow extends woosmap.map.MVCObject{constructor(options:woosmap.map.InfoWindowOptions);open(map:woosmap.map.Map,anchor:woosmap.map.Marker|woosmap.map.LatLng|woosmap.map.LatLngLiteral):void;close():void;setContent(content:string):void;setPosition(positionOrMarker:woosmap.map.Marker|woosmap.map.LatLng|woosmap.map.LatLngLiteral):void;setOffset(offset:woosmap.map.Point):void;setMarker(marker?:woosmap.map.Marker|null):void;setMap(map:woosmap.map.Map|null):void;getMap():woosmap.map.Map|null;}}declare namespace woosmap.map{class Marker extends woosmap.map.MVCObject{cursor:string;map:woosmap.map.Map|null;position:woosmap.map.LatLng;constructor(options?:woosmap.map.MarkerOptions);setIcon(icon:woosmap.map.Icon|string):void;setMap(map?:woosmap.map.Map|null):void;setOpacity(opacity:number):void;getOpacity():number;getPosition():woosmap.map.LatLng;setPosition(position:woosmap.map.LatLng|woosmap.map.LatLngLiteral,animate?:boolean,options?:woosmap.map.MarkerAnimateOptions,):void;getOffset():woosmap.map.Point;setOffset(offset:woosmap.map.Point):woosmap.map.Marker;setDraggable(shouldBeDraggable:boolean):woosmap.map.Marker;getDraggable():boolean;setRotation(rotation:number):woosmap.map.Marker;getRotation():number;setRotationAlignment(alignment:string):woosmap.map.Marker;getRotationAlignment():string;setPitchAlignment(alignment?:string):woosmap.map.Marker;getPitchAlignment():string;}}declare namespace woosmap.map{class StoresOverlay extends woosmap.map.OverlayView{constructor(style:woosmap.map.Style);clearSelection():void;setSelection(feature:object):void;setQuery(query?:string|null):void;setMap(map?:woosmap.map.Map|null):void;}}declare namespace woosmap.map{class OverlayView{constructor();setMap(map:woosmap.map.Map|null):void;}}declare namespace woosmap.map{class DirectionsService{constructor();route(request:woosmap.map.DirectionRequest,callback:(result:woosmap.map.DirectionResult,status:string)=>any,):void;}}declare namespace woosmap.map{class Data extends woosmap.map.MVCObject{constructor();add(feature:woosmap.map.data.Feature|woosmap.map.FeatureData):void;remove(feature:woosmap.map.data.Feature):void;addGeoJson(geojson:woosmap.map.GeoJSONFeatureCollection|woosmap.map.GeoJSONFeature,options?:{idPropertyName:string},):void;toGeoJson(callback:(geojson:woosmap.map.GeoJSONFeatureCollection)=>void):void;contains(feature:woosmap.map.data.Feature):boolean;forEach(callback:(feature:woosmap.map.data.Feature)=>void):void;getFeatureById(id:string):woosmap.map.data.Feature|null;getMap():woosmap.map.Map|null;setMap(map:woosmap.map.Map|null):void;setStyle(style:woosmap.map.StyleFunction|woosmap.map.StyleOptions):void;getStyle():woosmap.map.StyleFunction|woosmap.map.StyleOptions;overrideStyle(feature:woosmap.map.data.Feature,style:woosmap.map.StyleOptions):void;revertStyle(feature?:woosmap.map.data.Feature|null):void;loadGeoJson(url:string,options?:{idPropertyName:string},callback?:(data:woosmap.map.data.Feature[])=>void,):void;}}declare namespace woosmap.map.data{class Feature{constructor(featureData:woosmap.map.FeatureData|woosmap.map.GeoJSONFeature);getGeometry():woosmap.map.GeometryCollectionElement|woosmap.map.Data.GeometryCollection;setGeometry(geometry:woosmap.map.GeometryCollectionElement|woosmap.map.Data.GeometryCollection):void;getId():string;getProperty(name:string):any;removeProperty(name:string):void;setProperty(name:string,newValue:any):void;toGeoJson(callback:(geojson:woosmap.map.GeoJSONFeature)=>void):void;}}declare namespace woosmap.map.Data{class Point{constructor(point:woosmap.map.LatLng|woosmap.map.Coordinates|woosmap.map.LatLngLiteral);get():woosmap.map.LatLng;forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():"Point";}}declare namespace woosmap.map.Data{class MultiPoint{constructor(points:woosmap.map.LatLng[]|woosmap.map.Coordinates[]|woosmap.map.LatLngLiteral[]);getAt(n:number):woosmap.map.LatLng;getArray():woosmap.map.LatLng[];getLength():number;forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():"MultiPoint";}}declare namespace woosmap.map.Data{class LineString{constructor(points:woosmap.map.LatLng[]|woosmap.map.Coordinates[]|woosmap.map.LatLngLiteral[]);getAt(n:number):woosmap.map.LatLng;getArray():woosmap.map.LatLng[];getLength():number;forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():"LineString";}}declare namespace woosmap.map.Data{class MultiLineString{constructor(linestrings:woosmap.map.Data.LineString[]|woosmap.map.LatLng[][]|woosmap.map.LatLngLiteral[][],);getAt(n:number):woosmap.map.Data.LineString;getArray():woosmap.map.Data.LineString[];forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():"MultiLineString";}}declare namespace woosmap.map.Data{class LinearRing extends woosmap.map.Data.LineString{constructor(points:woosmap.map.LatLng[]|woosmap.map.Coordinates[]|woosmap.map.LatLngLiteral[]);}}declare namespace woosmap.map.Data{class Polygon{constructor(elements:|woosmap.map.Data.LinearRing[]|woosmap.map.LatLng[][]|woosmap.map.LatLngLiteral[][]|woosmap.map.Coordinates[][],);getAt(n:number):woosmap.map.Data.LinearRing;getArray():woosmap.map.Data.LinearRing[];getLength():number;forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():"Polygon";}}declare namespace woosmap.map.Data{class MultiPolygon{constructor(elements:|woosmap.map.Data.Polygon[]|woosmap.map.Data.LinearRing[][]|woosmap.map.LatLng[][][]|woosmap.map.LatLngLiteral[][][],);getAt(n:number):woosmap.map.Data.Polygon;getArray():woosmap.map.Data.Polygon[];getLength():number;forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():string;}}declare namespace woosmap.map.Data{class GeometryCollection{constructor(elements:woosmap.map.GeometryArray|woosmap.map.GeoJSONGeometry[]);getAt(n:number):woosmap.map.GeometryCollectionElement;getArray():woosmap.map.GeometryArray;getLength():number;forEachLatLng(callback:(point:woosmap.map.LatLng)=>void):void;getType():"GeometryCollection";}}declare namespace woosmap.map{class BaseGeometry extends woosmap.map.MVCObject{constructor(options:woosmap.map.GeometryOptions);getDraggable():boolean;getEditable():boolean;getMap():woosmap.map.Map|null;getVisible():boolean;setDraggable(draggable:boolean):void;setEditable(editable:boolean):void;setMap(map:woosmap.map.Map|null):void;setVisible(visible:boolean):void;}}declare namespace woosmap.map{class Polyline extends woosmap.map.BaseGeometry{constructor(options:woosmap.map.PolylineOptions);getPath():woosmap.map.MVCArray<woosmap.map.LatLng>;setOptions(options:woosmap.map.PolylineOptions):void;setPath(path:woosmap.map.MVCArray<woosmap.map.LatLng>|woosmap.map.LatLng[]|woosmap.map.LatLngLiteral[],):void;}}declare namespace woosmap.map{class BasePolygon extends woosmap.map.BaseGeometry{constructor(options:woosmap.map.GeometryOptions);}}declare namespace woosmap.map{class Polygon extends woosmap.map.BasePolygon{constructor(options:woosmap.map.PolygonOptions);getPath():woosmap.map.MVCArray<woosmap.map.LatLng>;getPaths():woosmap.map.MVCArray<woosmap.map.MVCArray<woosmap.map.LatLng>>;setOptions(options:woosmap.map.PolygonOptions):void;setPath(path:woosmap.map.MVCArray<woosmap.map.LatLng>|Array<woosmap.map.LatLng|woosmap.map.LatLngLiteral>,):void;setPaths(paths:|woosmap.map.MVCArray<woosmap.map.MVCArray<woosmap.map.LatLng>>|woosmap.map.MVCArray<woosmap.map.LatLng>|Array<Array<woosmap.map.LatLng|woosmap.map.LatLngLiteral>>|Array<woosmap.map.LatLng|woosmap.map.LatLngLiteral>,):void;}}declare namespace woosmap.map{class Rectangle extends woosmap.map.BasePolygon{constructor(options:woosmap.map.RectangleOptions);getBounds():woosmap.map.LatLngBounds;setBounds(bounds:woosmap.map.LatLngBounds|woosmap.map.LatLngBoundsLiteral):void;setOptions(options:woosmap.map.RectangleOptions):void;}}declare namespace woosmap.map{class Circle extends woosmap.map.BasePolygon{constructor(options:woosmap.map.CircleOptions);getBounds():woosmap.map.LatLngBounds;getCenter():woosmap.map.LatLng;getRadius():number;setCenter(center:woosmap.map.LatLng|woosmap.map.LatLngLiteral):void;setRadius(radius:number):void;setOptions(options:woosmap.map.CircleOptions):void;}}declare namespace woosmap.map{class LatLng{lat:()=>number;lng:()=>number;constructor(lat:woosmap.map.LatLng|woosmap.map.LatLngLiteral|number|(()=>number),lng?:number|(()=>number),);equals(other:woosmap.map.LatLng):boolean;toJSON():woosmap.map.LatLngLiteral;toString():string;}}declare namespace woosmap.map{class LatLngBounds{constructor(northEast?:woosmap.map.LatLng|woosmap.map.LatLngLiteral|null,southWest?:woosmap.map.LatLng|woosmap.map.LatLngLiteral|null,);extend(latlng:woosmap.map.LatLng|woosmap.map.LatLngLiteral):void;contains(latlng:woosmap.map.LatLng|woosmap.map.LatLngLiteral):boolean;intersects(other:woosmap.map.LatLngBounds):boolean;union(other:woosmap.map.LatLngBounds):void;getNorthEast():woosmap.map.LatLng;getSouthWest():woosmap.map.LatLng;getCenter():woosmap.map.LatLng;isEmpty():boolean;}}declare namespace woosmap.map{class Point{constructor(x:number,y:number);equals(other:woosmap.map.Point):boolean;}}declare namespace woosmap.map{class Size{constructor(width:number,height:number);equals(other:woosmap.map.Size):boolean;}}declare namespace woosmap.map{class MVCArray<T>extends woosmap.map.MVCObject{constructor(array?:T[]);clear():void;forEach(callback:(element:T,index:number)=>void):void;getArray():T[];getAt(i:number):T;getLength():number;insertAt(i:number,elem:T):void;pop():T;push(elem:T):number;removeAt(i:number):T;setAt(i:number,elem:T):void;indexOf(elem:T):number;}}declare namespace woosmap.map{class MVCObject{constructor();bindTo(key:string,target:object,targetKey?:string,notify?:boolean):void;isPropertyBound(key:string):boolean;get(key:string):any;set(key:string,value:any,forceCallback?:boolean):void;setOptions(keyValuePairs:object):void;unbind(key:string):void;unbindAll():void;addListener(eventName:string,handler:(...args:any[])=>any):woosmap.map.MapEventListener;}}declare namespace woosmap.map{class DirectionsRenderer extends woosmap.map.MVCObject{constructor(options:woosmap.map.DirectionsRendererOptions);setMap(map:woosmap.map.Map|null):void;setDirections(directions:woosmap.map.DirectionResult):void;setRouteIndex(routeIndex:number):void;}}declare namespace woosmap.map{class DistanceService{constructor();getDistanceMatrix(request:woosmap.map.distance.DistanceMatrixRequest,):Promise<woosmap.map.distance.DistanceMatrixResponse>;getDistanceIsochrone(request:woosmap.map.distance.DistanceIsochroneRequest,):Promise<woosmap.map.distance.DistanceIsochroneResponse>;}}declare namespace woosmap.map{class StoresService{constructor();autocomplete(request:woosmap.map.stores.StoresAutocompleteRequest,):Promise<woosmap.map.stores.StoresAutocompleteResponse>;search(request:woosmap.map.stores.StoresSearchRequest):Promise<woosmap.map.stores.StoresSearchResponse>;getStoreById(storeId:string):Promise<woosmap.map.stores.StoreResponse>;getBounds(request:woosmap.map.stores.StoresBoundsRequest):Promise<woosmap.map.stores.StoresBoundsResponse>;}}declare namespace woosmap.map{class LocalitiesService{constructor();autocomplete(request:woosmap.map.localities.LocalitiesAutocompleteRequest,):Promise<woosmap.map.localities.LocalitiesAutocompleteResponse>;geocode(request:woosmap.map.localities.LocalitiesGeocodeRequest,):Promise<woosmap.map.localities.LocalitiesGeocodeResponse>;getDetails(request:woosmap.map.localities.LocalitiesDetailsRequest,):Promise<woosmap.map.localities.LocalitiesDetailsResponse>;}}declare namespace woosmap.map.errors{class APIError extends Error{statusCode:number;constructor();}}declare namespace woosmap.map.errors{class BadRequestError extends woosmap.map.errors.APIError{constructor(message?:string);}}declare namespace woosmap.map.errors{class UnauthorizedError extends woosmap.map.errors.APIError{constructor(message?:string);}}declare namespace woosmap.map.errors{class ForbiddenError extends woosmap.map.errors.APIError{constructor(message?:string);}}declare namespace woosmap.map.errors{class NotFoundError extends woosmap.map.errors.APIError{constructor(message?:string);}}declare namespace woosmap.map.errors{class TooManyRequestsError extends woosmap.map.errors.APIError{constructor(message?:string);}}declare namespace woosmap.map.errors{class InternalServerError extends woosmap.map.errors.APIError{constructor(message?:string);}}declare namespace woosmap.map{type ControlPositionType="top-left"|"top-right"|"bottom-left"|"bottom-right";}declare namespace woosmap.map{interface FlyToOptions{animate?:boolean;around?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;bearing?:number;center?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;duration?:number;easing?:(_:number)=>number;essential?:boolean;offset?:woosmap.map.Point|woosmap.map.PointLiteral;padding?:woosmap.map.Padding;pitch?:number;zoom?:number;}}declare namespace woosmap.map{interface Padding{bottom?:number;left?:number;right?:number;top?:number;}}declare namespace woosmap.map{interface MapPanes{floatPane:Element;mapPane:Element;markerLayer:Element;overlayLayer:Element;overlayMouseTarget:Element;}}declare namespace woosmap.map{type GestureHandlingMode="none"|"greedy"|"cooperative"|"auto";}declare namespace woosmap.map{interface MapOptions{center?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;defaultStyle?:string;disable3dBuilding?:boolean;disableDefaultUI?:boolean;disableTilt?:boolean;gestureHandling?:woosmap.map.GestureHandlingMode;heading?:number;styles?:woosmap.map.MapStyleSpec[]|null;tilt?:number;zoom?:number;}}declare namespace woosmap.map{interface MapStyler{color?:string;gamma?:number;hue?:string;invert_lightness?:boolean;lightness?:number;saturation?:number;visibility?:string;weight?:number;}}declare namespace woosmap.map{interface MapStyleSpec{elementType?:string;featureType?:string;stylers:woosmap.map.MapStyler[];}}declare namespace woosmap.map{interface InfoWindowOptions{content?:string|Node|null;disableAutoPan?:boolean|null;maxWidth?:number|null;pixelOffset?:woosmap.map.Point;}}declare namespace woosmap.map{interface MarkerLabelOptions{className?:string|null;color?:string|null;fontFamily?:string|null;fontSize?:string|null;fontWeight?:string|null;text:string;}}declare namespace woosmap.map{interface MarkerAnimateOptions{complete?:(...args:any[])=>any;duration?:number;}}declare namespace woosmap.map{interface MarkerOptions{anchorPoint?:woosmap.map.Point;clickable?:boolean;draggable?:boolean;icon?:string|woosmap.map.Icon;label?:string|woosmap.map.MarkerLabelOptions;map?:woosmap.map.Map;opacity?:number;position:woosmap.map.LatLng|woosmap.map.LatLngLiteral;title?:string|null;visible?:boolean;}}declare namespace woosmap.map{interface Icon{anchor?:woosmap.map.Point|woosmap.map.PointLiteral;labelOrigin?:woosmap.map.Point|woosmap.map.PointLiteral;scaledSize?:woosmap.map.Size|woosmap.map.SizeLiteral;size?:woosmap.map.Size|woosmap.map.SizeLiteral;url:string;}}declare namespace woosmap.map{interface StyleRule{color:string;icon:woosmap.map.Icon;minSize?:number;selectedIcon?:woosmap.map.Icon;size?:number;}}declare namespace woosmap.map{interface TypedStyleRule{color:string;icon:woosmap.map.Icon;selectedIcon?:woosmap.map.Icon;type:string;}}declare namespace woosmap.map{interface Style{breakPoint:number;default:woosmap.map.StyleRule;rules:woosmap.map.TypedStyleRule[];}}declare namespace woosmap.map{interface DirectionLeg{distance:woosmap.map.Distance;duration:woosmap.map.Duration;end_address:string;end_location:woosmap.map.LatLngLiteral;end_waypoint:number;start_address:string;start_location:woosmap.map.LatLngLiteral;start_waypoint:number;steps?:woosmap.map.DirectionStep[];}}declare namespace woosmap.map{interface DirectionStep{distance:string;duration:string;end_location:woosmap.map.LatLngLiteral;instructions:woosmap.map.DirectionStepInstructions;start_location:woosmap.map.LatLngLiteral;travelMode:string;}}declare namespace woosmap.map{interface DirectionStepInstructions{action:number;summary:string;verbal_after?:string;verbal_alert?:string;verbal_before?:string;verbal_succint?:string;}}declare namespace woosmap.map{interface DirectionsBounds{northeast:woosmap.map.LatLngLiteral;southwest:woosmap.map.LatLngLiteral;}}declare namespace woosmap.map{interface DirectionsOverviewPolyline{points:string;}}declare namespace woosmap.map{interface DirectionRoute{bounds:woosmap.map.DirectionsBounds;legs:woosmap.map.DirectionLeg[];notice:string;overview_path?:woosmap.map.LatLng[];overview_polyline:woosmap.map.DirectionsOverviewPolyline;}}declare namespace woosmap.map{interface DirectionResult{error_message?:string;routes:woosmap.map.DirectionRoute[];}}declare namespace woosmap.map{interface DirectionsWayPoint{location:woosmap.map.LatLng|woosmap.map.LatLngLiteral;stopover?:boolean;}}declare namespace woosmap.map{interface DirectionRequest{arrival_time?:string;departure_time?:string;destination:woosmap.map.LatLng|woosmap.map.LatLngLiteral;details?:"none"|"full";origin:woosmap.map.LatLng|woosmap.map.LatLngLiteral;provideRouteAlternatives?:boolean;travelMode?:string;unitSystem?:string;waypoints?:woosmap.map.DirectionsWayPoint[];}}declare namespace woosmap.map{interface AutocompleteMatchedSubstring{length:number;offset:number;}}declare namespace woosmap.map{interface MatchedSubstring{matchedSubstrings:woosmap.map.AutocompleteMatchedSubstring[];}}declare namespace woosmap.map{interface Pagination{page:number;pageCount:number;}}declare namespace woosmap.map.localities{interface AddressComponents{long_name:string|string[];short_name:string|string[];types:string[];}}declare namespace woosmap.map{interface Distance{text:string;value:number;}}declare namespace woosmap.map{interface Duration{text:string;value:number;}}declare namespace woosmap.map{interface FeatureData{geometry?:woosmap.map.GeometryClasses|woosmap.map.LatLng|woosmap.map.LatLngLiteral;id?:any;properties?:object;}}declare namespace woosmap.map{type GeometryType=|"Point"|"MultiPoint"|"LineString"|"MultiLineString"|"LinearRing"|"Polygon"|"MultiPolygon"|"GeometryCollection";}declare namespace woosmap.map{interface GeometryData{coordinates:any;geometries?:woosmap.map.GeometryData[];type:woosmap.map.GeometryType;}}declare namespace woosmap.map.Data{interface Geometry<T,C>{getType():T;}}declare namespace woosmap.map{type GeometryCollectionElement=|woosmap.map.Data.Point|woosmap.map.Data.MultiPoint|woosmap.map.Data.LineString|woosmap.map.Data.MultiLineString|woosmap.map.Data.Polygon|woosmap.map.Data.MultiPolygon;}declare namespace woosmap.map{type GeometryArray=woosmap.map.GeometryCollectionElement[];}declare namespace woosmap.map{type GeometryClasses=woosmap.map.GeometryCollectionElement|woosmap.map.Data.GeometryCollection;}declare namespace woosmap.map{interface IconSequence{fixedRotation?:boolean|null;icon?:woosmap.map.SymbolIcon|null;offset?:string|null;repeat?:string|null;}}declare namespace woosmap.map{interface MarkerLabel{color?:string;fontSize?:string;parsedFontSize:number;text:string;}}declare namespace woosmap.map{interface StyleOptions{animation?:Animation;clickable?:boolean;cursor?:string;draggable?:boolean;editable?:boolean;fillColor?:string;fillOpacity?:number;icon?:string|woosmap.map.Icon;iconImage?:string;icons?:woosmap.map.IconSequence[];label?:string|woosmap.map.MarkerLabel;opacity?:number;strokeColor?:string;strokeOpacity?:number;strokeWeight?:number;title?:string;visible?:boolean;zIndex?:number;}}declare namespace woosmap.map{type StyleFunction=(feature:woosmap.map.data.Feature)=>woosmap.map.StyleOptions;}declare namespace woosmap.map{type GeoJSONPosition=[number,number];}declare namespace woosmap.map{interface GeoJSONRawGeometry<T,C>{coordinates:C;type:T;}}declare namespace woosmap.map{type GeoJSONPoint=woosmap.map.GeoJSONRawGeometry<"Point",woosmap.map.GeoJSONPosition>;}declare namespace woosmap.map{type GeoJSONMultiPoint=woosmap.map.GeoJSONRawGeometry<"MultiPoint",woosmap.map.GeoJSONPosition[]>;}declare namespace woosmap.map{type GeoJSONLineString=woosmap.map.GeoJSONRawGeometry<"LineString",woosmap.map.GeoJSONPosition[]>;}declare namespace woosmap.map{type GeoJSONMultiLineString=woosmap.map.GeoJSONRawGeometry<"MultiLineString",woosmap.map.GeoJSONPosition[][]>;}declare namespace woosmap.map{type GeoJSONPolygon=woosmap.map.GeoJSONRawGeometry<"Polygon",woosmap.map.GeoJSONPosition[][]>;}declare namespace woosmap.map{type GeoJSONMultiPolygon=woosmap.map.GeoJSONRawGeometry<"MultiPolygon",woosmap.map.GeoJSONPosition[][][]>;}declare namespace woosmap.map{type GeoJSONGeometry=|woosmap.map.GeoJSONPoint|woosmap.map.GeoJSONMultiPoint|woosmap.map.GeoJSONLineString|woosmap.map.GeoJSONMultiLineString|woosmap.map.GeoJSONPolygon|woosmap.map.GeoJSONMultiPolygon|woosmap.map.GeoJSONGeometryCollection;}declare namespace woosmap.map{interface GeoJSONGeometryCollection{geometries:woosmap.map.GeoJSONGeometry[];type:"GeometryCollection";}}declare namespace woosmap.map{interface GeoJSONFeature{geometry:woosmap.map.GeoJSONGeometry;id?:number|string;properties:{};type:"Feature";}}declare namespace woosmap.map{interface GeoJSONFeatureCollection{features:woosmap.map.GeoJSONFeature[];type:"FeatureCollection";}}declare namespace woosmap.map{interface GeometryOptions{clickable?:boolean|null;draggable?:boolean|null;editable?:boolean|null;geodesic?:boolean|null;map?:woosmap.map.Map|null;strokeColor?:string|null;strokeOpacity?:number|null;strokePosition?:string;strokeWeight?:number|null;visible?:boolean|null;zIndex?:number|null;}}declare namespace woosmap.map{interface PolygonFillOptions extends woosmap.map.GeometryOptions{fillColor?:string|null;fillOpacity?:number|null;}}declare namespace woosmap.map{interface PolylineOptions extends woosmap.map.GeometryOptions{path:(woosmap.map.MVCArray<woosmap.map.LatLng>|null)|woosmap.map.LatLng[]|woosmap.map.LatLngLiteral[];}}declare namespace woosmap.map{interface PolygonOptions extends woosmap.map.PolygonFillOptions{paths:|(woosmap.map.MVCArray<woosmap.map.MVCArray<woosmap.map.LatLng>>|null)|woosmap.map.MVCArray<woosmap.map.LatLng>|Array<Array<woosmap.map.LatLng|woosmap.map.LatLngLiteral>>|Array<woosmap.map.LatLng|woosmap.map.LatLngLiteral>;}}declare namespace woosmap.map{interface RectangleOptions extends woosmap.map.PolygonFillOptions{bounds:(woosmap.map.LatLngBounds|null)|(woosmap.map.LatLngBoundsLiteral|null);}}declare namespace woosmap.map{interface CircleOptions extends woosmap.map.PolygonFillOptions{center:(woosmap.map.LatLng|null)|(woosmap.map.LatLngLiteral|null);radius?:number|null;}}declare namespace woosmap.map{type Coordinates=[number,number];}declare namespace woosmap.map{interface LatLngLiteral{lat:number;lng:number;}}declare namespace woosmap.map{interface LatLngBoundsLiteral{east:number;north:number;south:number;west:number;}}declare namespace woosmap.map{interface PointLiteral{x:number;y:number;}}declare namespace woosmap.map{interface SizeLiteral{height:number;width:number;}}declare namespace woosmap.map{interface MapEventListener{remove():void;}}declare namespace woosmap.map{interface SymbolIcon{anchor?:woosmap.map.Point|null;fillColor?:string|null;fillOpacity?:number|null;labelOrigin?:woosmap.map.Point|null;path:string;rotation?:number|null;scale?:number|null;strokeColor?:string|null;strokeOpacity?:number|null;strokeWeight?:number|null;}}declare namespace woosmap.map{interface DirectionsRendererOptions{directions?:woosmap.map.DirectionResult;draggable?:boolean;map?:woosmap.map.Map;markerOption?:object;preserveViewport?:boolean;routeIndex?:number;suppressBicyclingLayer?:boolean;suppressInfoWindows?:boolean;suppressMarkers?:boolean;suppressPolylines?:boolean;}}declare namespace woosmap.map.distance{interface DistanceMatrixRequest{avoidFerries?:boolean;avoidHighways?:boolean;avoidTolls?:boolean;avoidZones?:woosmap.map.LatLng[][]|woosmap.map.LatLngLiteral[][];departureTime?:Date|string;destinations:woosmap.map.LatLng[]|woosmap.map.LatLngLiteral[];elements?:"distance"|"duration"|"duration_distance";language?:string;method?:"time"|"distance";origins:woosmap.map.LatLng[]|woosmap.map.LatLngLiteral[];travelMode?:string;unitSystem?:string;}}declare namespace woosmap.map.distance{interface DistanceIsochroneRequest{avoidFerries?:boolean;avoidHighways?:boolean;avoidTolls?:boolean;avoidZones?:woosmap.map.LatLng[][]|woosmap.map.LatLngLiteral[][];language?:string;method?:"time"|"distance";origin:woosmap.map.LatLng|woosmap.map.LatLngLiteral;travelMode?:string;unitSystem?:string;value:number;}}declare namespace woosmap.map.distance{interface DistanceMatrixResponse{error_message?:string;rows:woosmap.map.distance.DistanceMatrixResponseRow[];status:string;}}declare namespace woosmap.map.distance{interface DistanceIsochroneResponse{error_message?:string;isoline:woosmap.map.distance.DistanceIsoline;status:string;}}declare namespace woosmap.map.distance{interface DistanceMatrixResponseRow{elements:woosmap.map.distance.DistanceMatrixElement[];}}declare namespace woosmap.map.distance{interface DistanceMatrixElement{distance:woosmap.map.Distance;duration:woosmap.map.Duration;status:"OK"|"NOT_FOUND"|"ZERO_RESULTS";}}declare namespace woosmap.map.distance{interface DistanceIsoline{distance?:woosmap.map.Distance;geometry:string;origin:woosmap.map.LatLngLiteral;path?:woosmap.map.LatLng[];time?:woosmap.map.Duration;}}declare namespace woosmap.map.stores{interface StoresAutocompleteRequest{language?:string;limit?:number;query?:string;}}declare namespace woosmap.map.stores{interface StoresSearchRequest{latLng?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;page?:number;polyline?:string;query?:string;radius?:number;storesByPage?:number;zone?:boolean;}}declare namespace woosmap.map.stores{interface StoresBoundsRequest{latLng?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;query?:string;radius?:number;}}declare namespace woosmap.map.stores{interface StoresAutocompleteResponse{predictions:woosmap.map.stores.StorePrediction[];}}declare namespace woosmap.map.stores{interface StoreResponse{geometry:woosmap.map.GeoJSONPoint;properties:woosmap.map.stores.Store;type:"Feature";}}declare namespace woosmap.map.stores{interface StoresSearchResponse{features:woosmap.map.stores.StoreResponse[];pagination:woosmap.map.Pagination;type:"FeatureCollection";}}declare namespace woosmap.map.stores{interface StoresBoundsResponse{bounds:woosmap.map.LatLngBoundsLiteral;}}declare namespace woosmap.map.stores{interface StorePrediction{highlighted?:number;matched_substrings?:woosmap.map.MatchedSubstring[];name:string;store_id:string;types:string[];}}declare namespace woosmap.map.stores{interface Store{address:woosmap.map.stores.StoreAddress;contact:woosmap.map.stores.StoreContact;distance?:number;lastUpdated:string|null;name:string;open:woosmap.map.stores.StoreOpen;opening_hours:woosmap.map.stores.StoreOpeningHours|null;store_id:string;tags:string[];types:string[];user_properties:any;weekly_opening:woosmap.map.stores.StoreWeeklyOpening;}}declare namespace woosmap.map.stores{interface StoreAddress{city?:string;country_code?:string|null;lines?:string[];zipcode?:string;}}declare namespace woosmap.map.stores{interface StoreContact{email:string;phone:string;website:string;}}declare namespace woosmap.map.stores{interface StoreOpen{current_slice:woosmap.map.stores.StoreOpeningHoursPeriod;nextOpening?:woosmap.map.stores.StoreOpenNextOpening;open_hours:woosmap.map.stores.StoreOpeningHoursPeriod[];open_now:boolean;week_day?:number;}}declare namespace woosmap.map.stores{interface StoreOpeningHoursPeriod{"all-day"?:boolean;end:string;start:string;}}declare namespace woosmap.map.stores{interface StoreOpenNextOpening{day:string;end:string;start:string;}}declare namespace woosmap.map.stores{interface StoreWeeklyOpening{"1"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;"2"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;"3"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;"4"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;"5"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;"6"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;"7"?:woosmap.map.stores.StoreWeeklyOpeningHoursPeriod;timezone:string;}}declare namespace woosmap.map.stores{interface StoreWeeklyOpeningHoursPeriod{hours:woosmap.map.stores.StoreOpeningHoursPeriod[];isSpecial:boolean;}}declare namespace woosmap.map.stores{interface StoreOpeningHours{special:any;timezone:string;usual:woosmap.map.stores.StoreOpeningHoursUsual;}}declare namespace woosmap.map.stores{interface StoreOpeningHoursUsual{"1"?:woosmap.map.stores.StoreOpeningHoursPeriod[];"2"?:woosmap.map.stores.StoreOpeningHoursPeriod[];"3"?:woosmap.map.stores.StoreOpeningHoursPeriod[];"4"?:woosmap.map.stores.StoreOpeningHoursPeriod[];"5"?:woosmap.map.stores.StoreOpeningHoursPeriod[];"6"?:woosmap.map.stores.StoreOpeningHoursPeriod[];"7"?:woosmap.map.stores.StoreOpeningHoursPeriod[];default?:woosmap.map.stores.StoreOpeningHoursPeriod[];}}declare namespace woosmap.map.localities{interface LocalitiesAutocompleteRequest{components?:woosmap.map.localities.LocalitiesComponentRestrictions;customDescription?:string;data?:woosmap.map.localities.LocalitiesRequestData;extended?:string;input:string;language?:string;location?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;radius?:number;types?:string|string[];}}declare namespace woosmap.map.localities{interface LocalitiesGeocodeRequest{address?:string;components?:woosmap.map.localities.LocalitiesComponentRestrictions;countryCodeFormat?:"alpha2"|"alpha3";data?:woosmap.map.localities.LocalitiesRequestData;fields?:"geometry";language?:string;latLng?:woosmap.map.LatLng|woosmap.map.LatLngLiteral;list_sub_buildings?:boolean;}}declare namespace woosmap.map.localities{interface LocalitiesDetailsRequest{countryCodeFormat?:"alpha2"|"alpha3";fields?:"geometry";language?:string;publicId:string;}}declare namespace woosmap.map.localities{interface LocalitiesAutocompleteResponse{localities:woosmap.map.localities.LocalitiesPredictions[];}}declare namespace woosmap.map.localities{interface LocalitiesGeocodeResponse{results:woosmap.map.localities.LocalitiesGeocodeResult[];}}declare namespace woosmap.map.localities{interface LocalitiesDetailsResponse{result:woosmap.map.localities.LocalitiesDetailsResult;}}declare namespace woosmap.map.localities{interface LocalitiesDetailsResult{address_components?:woosmap.map.localities.AddressComponents[];formatted_address:string;geometry?:woosmap.map.localities.LocalitiesDetailsGeometry;name?:string;public_id:string;status?:"not_yet_built";types:woosmap.map.localities.LocalitiesTypes[];}}declare namespace woosmap.map.localities{interface LocalitiesComponentRestrictions{country:string|string[];}}declare namespace woosmap.map.localities{interface LocalitiesDetailsGeometry{accuracy:woosmap.map.localities.LocalitiesDetailsAccuracy;location:woosmap.map.LatLngLiteral;viewport:woosmap.map.LatLngBoundsLiteral;}}declare namespace woosmap.map.localities{interface LocalitiesDetailsSummary{description:string;public_id:string;}}declare namespace woosmap.map.localities{interface LocalitiesPredictions{description?:string;has_addresses?:boolean;matched_substrings?:woosmap.map.MatchedSubstring;public_id:string;type?:woosmap.map.localities.LocalitiesTypes;}}declare namespace woosmap.map.localities{interface LocalitiesGeocodeResult{address_components?:woosmap.map.localities.AddressComponents[];formatted_address:string;geometry?:woosmap.map.localities.LocalitiesDetailsGeometry;public_id:string;status?:"not_yet_built";sub_buildings?:woosmap.map.localities.LocalitiesDetailsSummary[];types:woosmap.map.localities.LocalitiesTypes[];}}declare namespace woosmap.map.localities{type LocalitiesTypes=|"address"|"locality"|"admin_level"|"airport"|"amusement_park"|"art_gallery"|"country"|"metro_station"|"museum"|"postal_code"|"shopping"|"tourist_attraction"|"train_station"|"zoo";}declare namespace woosmap.map.localities{type LocalitiesRequestData="standard"|"advanced";}declare namespace woosmap.map.localities{type LocalitiesDetailsAccuracy="ROOFTOP"|"DISTRICT"|"POSTAL_CODE"|"ROUTE";}declare namespace woosmap.map.localities{type LocalitiesGeocodeTypes="address"|"locality"|"postal_code"|"route";}declare namespace woosmap.map.localities{type LocalitiesGeocodeLocationType="ROOFTOP"|"DISTRICT"|"POSTAL_CODE"|"ROUTE";}declare namespace woosmap.map.localities{interface LocalitiesGeocodeGeometry{location:woosmap.map.LatLngLiteral;location_type:woosmap.map.localities.LocalitiesGeocodeLocationType;viewport:woosmap.map.LatLngBounds;}}declare namespace woosmap.map{enum DirectionStatus{OK="OK",}}declare namespace woosmap.map{enum TravelMode{BICYCLING="BICYCLING",DRIVING="DRIVING",WALKING="WALKING",}}declare namespace woosmap.map{enum UnitSystem{IMPERIAL="IMPERIAL",METRIC="METRIC",}}declare namespace woosmap.map.distance{enum DistanceServiceStatus{BACKEND_ERROR="BACKEND_ERROR",INVALID_REQUEST="INVALID_REQUEST",MAX_ELEMENTS_EXCEEDED="MAX_ELEMENTS_EXCEEDED",MAX_ROUTE_LENGTH_EXCEEDED="MAX_ROUTE_LENGTH_EXCEEDED",OK="OK",OVER_QUERY_LIMIT="OVER_QUERY_LIMIT",REQUEST_DENIED="REQUEST_DENIED",}}declare namespace woosmap.map.event{function addListener(instance:object,eventName:string,handler:(...args:any[])=>any,):woosmap.map.MapEventListener;function addListenerOnce(instance:object,eventName:string,handler:(...args:any[])=>any,):woosmap.map.MapEventListener;function addDomListener(element:Element,eventName:string,handler:(...args:any[])=>any):void;function removeListener(listener:woosmap.map.MapEventListener):void;function clearInstanceListeners(instance:object):void;function clearListeners(instance:object,eventName:string):void;function trigger(instance:object,eventName:string,eventArgs?:any[]|null):void;}declare namespace woosmap.map.geometry{function containsLocation(point:woosmap.map.LatLng|woosmap.map.LatLngLiteral,polygon:woosmap.map.Polygon,):boolean;function isLocationOnEdge(point:woosmap.map.LatLng|woosmap.map.LatLngLiteral,poly:woosmap.map.Polygon,tolerance?:number,):boolean;}declare namespace woosmap.map{class IndoorWidget{constructor(widgetOptions?:woosmap.map.IndoorWidgetOptions,rendererOptions?:woosmap.map.IndoorRendererOptions,);setMap(map:Map):void;setVenue(venueId:string):void;highlightFeature(id:string,silent:boolean,padding?:Padding):void;highlightFeatureByRef(ref:string,padding?:Padding):void;unselectFeature():void;setDirections(directions?:woosmap.map.IndoorDirectionResult|null):void;setUnits(units:"imperial"|"metric"):void;getUnits():"imperial"|"metric";setDirectionsMode(profile:string):void;getDirectionsMode():string|null;setBaseFilter(filter?:string|null):void;getBaseFilter():string|null;setUserLocation(lat:number,lng:number,level:number,bearing?:number,forceFocus?:boolean):void;setNavigationMode(allowNavigation:boolean):void;getNavigationMode():boolean;getAutocompleteWithDistance():boolean;setTheme(theme:string):void;setZonesToAvoid(avoidZones:string):string|null;getZonesToAvoid():string|null;setFloor(floor:number):void;addListener(eventName:string,handler:any):MapEventListener;trigger(instance:object,eventName:string,eventArgs?:any[]|null):void;}}declare namespace woosmap.map{class IndoorRenderer extends MVCObject{constructor(options?:woosmap.map.IndoorRendererOptions);setMap(map?:woosmap.map.Map|null):void;getLevel():number;getSelectedFeature():GeoJSONFeature|null;getVenue():woosmap.map.Venue|null;getView():"mobile"|"desktop"|"auto";setDirections(directions?:woosmap.map.IndoorDirectionResult|null,padding?:number|null):void;highlightStep(stepToHighlight?:GeoJSONFeature|null,fitBounds?:boolean,tilt?:boolean,soundEnabled?:boolean,):void;displayRoutingPath(show:boolean):void;unselectFeature():void;setUserLocation(lat:number,lng:number,level:number,bearing?:number,forceFocus?:boolean,adjusted?:boolean,):void;getUserLocation():woosmap.map.IndoorPosition;isUserInsideVenue(lat:number,lng:number):boolean;setFloor(floor:number):void;setVenue(venueId:string):void;highlightFeature(featureid:string,silent:boolean,padding?:Padding):void;highlightFeatureByRef(ref:string,padding?:Padding):void;filterPois(advancedFilter:string,disableZoomMin:boolean):any;setTheme(theme:string):void;setBaseFilter(filter:string):void;resetUserMarker():void;notifyUserDeviated(currentLocation:GeoJSONFeature):void;}}declare namespace woosmap.map{class IndoorService{constructor();venues(callback:(venues:woosmap.map.VenuesResult)=>void):void;venue(venueId:string,callback:(venue:woosmap.map.Venue)=>void):void;search(venueId:string,query:string,callback:(featureCollection:GeoJSONFeatureCollection)=>any,ref?:string|null,id?:string|null,advancedFilter?:string|null,):void;directions(request:woosmap.map.IndoorDirectionRequest,callback:(directions:woosmap.map.IndoorDirectionResult)=>void,):void;feature(venueId:string,featureId:number,callback:(feature:GeoJSONFeature)=>void):void;autocomplete(venueId:string,query:string,callback:(predictions:woosmap.map.Indoor.Predictions)=>any,ref?:string|null,id?:string|null,fromLocation?:string|null,advancedFilter?:string|null,):void;}}declare namespace woosmap.map{interface Venue{bbox:number[];buildings?:woosmap.map.Building[]|null;categories?:string[]|null;levels:woosmap.map.Level[];name?:string|null;routing_profiles?:string[]|null;venue_id:string;}}declare namespace woosmap.map{interface IndoorDirectionRequest{avoid?:string|null;destination?:LatLng|null;destinationId:(number|null)|string;destinationLevel?:number|null;language?:string|null;mode?:string|null;optimize?:boolean|null;origin?:LatLng|null;originId:(number|null)|string;originLevel?:number|null;units:"metric"|"imperial";venueId:string;waypoints?:string|null;}}declare namespace woosmap.map{interface IndoorWidgetOptionsui{primaryColor:string;secondaryColor:string;}}declare namespace woosmap.map{interface Level{bbox:number[];level:number;name?:string|null;}}declare namespace woosmap.map{interface IndoorWidgetOptions{autocompleteWithDistance?:boolean;avoidZones?:string;baseFilter?:string;directionsMode?:string;navigationMode?:boolean;ui?:woosmap.map.IndoorWidgetOptionsui;units?:"imperial"|"metric"|"";}}declare namespace woosmap.map{interface IndoorPosition{adjusted?:boolean|null;bearing?:number|null;forceFocus?:boolean|null;level:number;position:LatLngLiteral;}}declare namespace woosmap.map{interface LatLngLevel{lat:number;level:number;lng:number;}}declare namespace woosmap.map{interface IndoorRendererOptions{baseFilter?:string;centerMap?:boolean;defaultFloor?:number;directionsIcons?:woosmap.map.IndoorDirectionsIcons;forceExtrusion?:boolean;hideLevelSelector?:boolean;highlightPOI?:string;highlightPOIByRef?:string;icon?:woosmap.map.IndoorRendererOptionsIcon;levelSelectorPosition?:"auto"|"top"|"right";responsive?:"mobile"|"desktop"|"auto";showRoutingPaths?:boolean;theme?:string;useInfoWindow?:boolean;venue?:string;}}declare namespace woosmap.map{type PolylineCoords=GeoJSONPosition[];}declare namespace woosmap.map{interface Building{cover?:string|null;description?:string|null;levels:woosmap.map.Level[];localized_name?:{}|null;logo?:string|null;name?:string|null;opening_hours?:string|null;ref?:string|null;}}declare namespace woosmap.map{interface VenuesResult{venues:woosmap.map.Venue[];}}declare namespace woosmap.map{interface IndoorDistance{text:string;value:number;}}declare namespace woosmap.map.Indoor{interface Predictions{predictions:woosmap.map.Indoor.Prediction[];type:"Array";}}declare namespace woosmap.map{interface IndoorDuration{text:string;value:number;}}declare namespace woosmap.map.Indoor{interface Prediction{building?:string|null;distance?:number|null;id:number;level:number;name:string;ref?:string|null;}}declare namespace woosmap.map{interface IndoorInstruction{instruction_type:string;summary:string;}}declare namespace woosmap.map{interface IndoorDirectionsIcons{destinationIcon?:woosmap.map.IndoorRendererOptionsIcon;originIcon?:woosmap.map.IndoorRendererOptionsIcon;}}declare namespace woosmap.map{type IndoorDirectionsBounds=number[];}declare namespace woosmap.map{interface IndoorRendererOptionsIcon{anchor?:{x:number;y:number};scaledSize:{height:number;width:number};url:string;}}declare namespace woosmap.map{interface IndoorDirectionRoute{bounds:woosmap.map.IndoorDirectionsBounds;legs:woosmap.map.IndoorDirectionLeg[];}}declare namespace woosmap.map{interface IndoorStep{bearing_end:number;bearing_start:number;distance:woosmap.map.IndoorDistance;duration:woosmap.map.IndoorDuration;end_location:woosmap.map.LatLngLevel;instruction?:woosmap.map.IndoorInstruction|null;polyline:woosmap.map.PolylineCoords;start_location:woosmap.map.LatLngLevel;}}declare namespace woosmap.map{interface IndoorDirectionLeg{distance:woosmap.map.IndoorDistance;duration:woosmap.map.IndoorDuration;end_location:woosmap.map.LatLngLevel;start_location:woosmap.map.LatLngLevel;steps:woosmap.map.IndoorStep[];}}declare namespace woosmap.map{interface IndoorDirectionResult{routes:woosmap.map.IndoorDirectionRoute[];}}